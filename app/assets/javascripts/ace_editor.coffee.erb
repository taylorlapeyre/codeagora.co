window.editor =
  editor: null

  predicted: false

  aliases:
    <% Language.all.each do |language| %>
    '<%= language.name %>': '<%= language.to_aced %>'
    <% end %>

  init: (e='#editor_textarea', t='github', m='javascript' ) ->
    $(e).acedInitTA theme: t, mode: m
    @editor = $($(e).data('ace-div')).aced()
    @configureAppearance()

  configureAppearance: ->
    @editor.setFontSize '70%'
    @editor.setShowPrintMargin false
    @editor.getSession().setTabSize 2

  init_on_select: (s) ->
    @init()
    @highlight $(s).find('option:selected').text()
    @highlight_on_select s

  init_check: ->
    @init() unless @editor

  getEditor: ->
    @init_check()
    @editor

  theme: (t) ->
    @getEditor().setTheme "ace/theme/#{t}"

  highlight: (m) ->
    @init_check()
    m = if (m of @aliases) then @aliases[m] else m.toLowerCase()
    @getEditor().getSession().setMode "ace/mode/#{m}"

  highlight_on_select: (s) ->
    $(s).change ->
      window.editor.highlight $(this).find('option:selected').text()

  predict: () ->
    return if @predicted
    @init_check()
    code = @editor.getSession().getValue();
    ascii_codes = code.split("").map( (letter) -> return letter.charCodeAt(0) )
    num_letters = ascii_codes.length
    inputs = Array.apply(null, new Array(128)).map(Number.prototype.valueOf,0)
    inputs[ascii_code]++ for ascii_code in ascii_codes
    inputs.map( (num) -> return num/num_letters )
    @predicted = true
    alert(inputs)
